---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-commander-deployment
  namespace: core
spec:
  selector:
    matchLabels:
      app: redis-commander
  replicas: 1
  template:
    metadata:
      labels:
        app: redis-commander
    spec:
      containers:
        - name: redis-commander
          image: ghcr.io/joeferner/redis-commander:latest
          ports:
            - containerPort: 8081
          resources:
            limits:
              memory: 128Mi
              cpu: 50m
            requests:
              memory: 128Mi
              cpu: 50m
          env:
            - name: REDIS_HOST
              value: "redis-service"
            - name: REDIS_PORT
              value: "6379"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: REDIS_PASSWORD
          securityContext:
            allowPrivilegeEscalation: false
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
          livenessProbe:
            httpGet:
              path: /favicon.png
              port: 8081
            initialDelaySeconds: 10
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: redis-commander-service
spec:
  selector:
    app: redis-commander
  ports:
    - name: redis
      protocol: TCP
      port: 8081
      targetPort: 8081
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: zerossl-clusterissuer
    cert-manager.io/duration: 3600h
  name: redis-commander-ingress
  namespace: core
spec:
  ingressClassName: nginx
  rules:
  - host: redis-commander.navkrish.net
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: redis-commander-service
            port:
              number: 8081
  tls:
    - hosts:
      - redis-commander.navkrish.net
      secretName: redis-commander-cert-tls
